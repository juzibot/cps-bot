"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = __importDefault(require("fs"));
const util_1 = __importDefault(require("util"));
function saveFile(file, text) {
    return __awaiter(this, void 0, void 0, function* () {
        // if (suffix) {
        //   const backupFile = this.jsonFile + suffix
        //   const readStream = fs.createReadStream(this.jsonFile)
        //   const writeStream = fs.createWriteStream(backupFile)
        //   const future = new Promise((resolve, reject) => {
        //     writeStream.on('close', resolve)
        //     writeStream.on('error', reject)
        //   })
        //   readStream.pipe(writeStream)
        //   await future  // wait file write over
        // }
        yield util_1.default.promisify(fs_1.default.writeFile)(file, text);
    });
}
exports.saveFile = saveFile;
//# sourceMappingURL=save-file.js.map