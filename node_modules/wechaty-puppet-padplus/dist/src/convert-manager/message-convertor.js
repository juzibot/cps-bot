"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
function convertMessageFromGrpcToPadplus(rawMessage) {
    return __awaiter(this, void 0, void 0, function* () {
        const messagePayload = {
            appMsgType: rawMessage.AppMsgType,
            content: rawMessage.Content,
            createTime: rawMessage.CreateTime,
            fileName: rawMessage.FileName || rawMessage.fileName,
            fromMemberNickName: rawMessage.FromMemberNickName,
            fromMemberUserName: rawMessage.FromMemberUserName,
            fromUserName: rawMessage.FromUserName,
            imgBuf: rawMessage.ImgBuf,
            imgStatus: rawMessage.ImgStatus,
            l1MsgType: rawMessage.L1MsgType,
            msgId: rawMessage.MsgId,
            msgSource: rawMessage.MsgSource,
            msgSourceCd: rawMessage.msgSourceCd,
            msgType: rawMessage.MsgType,
            newMsgId: rawMessage.NewMsgId,
            pushContent: rawMessage.PushContent,
            status: rawMessage.Status,
            toUserName: rawMessage.ToUserName,
            uin: rawMessage.Uin,
            url: rawMessage.Url,
            wechatUserName: rawMessage.wechatUserName,
        };
        return messagePayload;
    });
}
exports.convertMessageFromGrpcToPadplus = convertMessageFromGrpcToPadplus;
//# sourceMappingURL=message-convertor.js.map